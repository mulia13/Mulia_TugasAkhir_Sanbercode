{
	"info": {
		"_postman_id": "a11aee22-bad4-448f-b084-c28a4007b600",
		"name": "Automation Test API Sanbercode",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "26347195"
	},
	"item": [
		{
			"name": "List users",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function (){\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Respone time is less then 300ms\", function (){\r",
							"    pm.expect(pm.response.responseTime).to.be.below(300);\r",
							"});\r",
							"\r",
							"pm.test(\"Body match string\", function (){\r",
							"    pm.expect(pm.response.text()).to.include(\"lindsay.ferguson@reqres.in\");\r",
							"});\r",
							"\r",
							"pm.test(\"Email verifikasi berhasil\", function (){\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.data[1].email).to.eql(\"lindsay.ferguson@reqres.in\");\r",
							"});\r",
							"\r",
							"pm.test(\"Page should be 2\", function () {\r",
							"    const jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.page).to.eql(2);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/api/users?page=2",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"users"
					],
					"query": [
						{
							"key": "page",
							"value": "2"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function (){\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"pm.test(\"Respone time is less then 500ms\", function (){\r",
							"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
							"});\r",
							"\r",
							"pm.test(\"Body match string\", function (){\r",
							"    pm.expect(pm.response.text()).to.include(\"name\");\r",
							"});\r",
							"\r",
							"pm.test(\"Response should have correct name\", function () {\r",
							"    pm.expect(pm.response.json().name).to.eql(\"morpheus\");\r",
							"});\r",
							"\r",
							"pm.test(\"Response should have id and createdAt\", function () {\r",
							"    const responseJson = pm.response.json();\r",
							"    pm.expect(responseJson).to.have.property('id');\r",
							"    pm.expect(responseJson).to.have.property('createdAt');\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"morpheus\",\r\n    \"job\": \"leader\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/api/users",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function (){\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Respone time is less then 500ms\", function (){\r",
							"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
							"});\r",
							"\r",
							"pm.test(\"Body match string\", function (){\r",
							"    pm.expect(pm.response.text()).to.include(\"name\");\r",
							"});\r",
							"\r",
							"pm.test(\"Response should have correct name and job\", function () {\r",
							"    pm.expect(pm.response.json().name).to.eql(\"morpheus\");\r",
							"    pm.expect(pm.response.json().job).to.eql(\"zion resident\");\r",
							"});\r",
							"\r",
							"pm.test(\"Response should have updatedAtt\", function () {\r",
							"    const responseJson = pm.response.json();\r",
							"    pm.expect(responseJson).to.have.property('updatedAt');\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"morpheus\",\r\n    \"job\": \"zion resident\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/api/users/2",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"users",
						"2"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function (){\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Respone time is less then 500ms\", function (){\r",
							"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
							"});\r",
							"\r",
							"pm.test(\"Body match string\", function (){\r",
							"    pm.expect(pm.response.text()).to.include(\"name\");\r",
							"    pm.expect(pm.response.text()).to.include(\"job\");\r",
							"});\r",
							"\r",
							"pm.test(\"Response should have correct name and job\", function () {\r",
							"    pm.expect(pm.response.json().name).to.eql(\"morpheus\");\r",
							"    pm.expect(pm.response.json().job).to.eql(\"zion resident\");\r",
							"});\r",
							"\r",
							"pm.test(\"Response should have updatedAtt\", function () {\r",
							"    const responseJson = pm.response.json();\r",
							"    pm.expect(responseJson).to.have.property('updatedAt');\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"morpheus\",\r\n    \"job\": \"zion resident\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/api/users/2",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"users",
						"2"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function (){\r",
							"    pm.response.to.have.status(204);\r",
							"});\r",
							"\r",
							"pm.test(\"Response should be empty\", function () {\r",
							"    pm.expect(pm.response.text()).to.eql('');\r",
							"});\r",
							"\r",
							"pm.test(\"Respone time is less then 500ms\", function (){\r",
							"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{base_url}}/api/users/2",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"users",
						"2"
					]
				}
			},
			"response": []
		}
	],
	"variable": [
		{
			"key": "base_url",
			"value": "https://reqres.in"
		}
	]
}